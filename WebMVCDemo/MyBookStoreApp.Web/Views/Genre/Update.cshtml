@using MyBookStoreApp.MyBookStoreApp.Web.ViewModels
@model MyBookStoreApp.MyBookStoreApp.Web.ViewModels.GenreViewModel

<h2 class="card-header">Edit author details</h2>
<div class="p-3">
    <form method="patch" asp-action="Update" asp-controller="Author">
        <div class="container">
            <input type="hidden" asp-for="GenreId" />
            <div class="form-group my-5 row">
                <label asp-for="Name" class="form-label col-md-2"></label>
                <div class="col-md-10 row">
                    <input asp-for="Name" class="form-control col" />
                    <span asp-validation-for="Name" class="col  text-danger"></span>
                </div>
            </div>

            <div class="form-group my-5 row">
                <label asp-for="Description" class="form-label col-md-2"></label>
                <div class="col-md-10 row">
                    <input asp-for="Description" class="form-control col" />
                    <span asp-validation-for="Description" class="col text-danger"></span>
                </div>
            </div>

            <div class="form-group row">
                <div class="offset-md-2 col-md-4">
                    <button type="button" class="btn btn-primary" onclick="updateAuthor()">Update</button>
                    <button type="reset" class="btn btn-danger" onclick="resetValidation()">Reset</button>
                </div>
            </div>
        </div>
    </form>

    <script>
        function updateAuthor() {
            var form = document.querySelector('form');
            var formData = new FormData(form);

            fetch(form.action, {
                method: 'PATCH',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        // Handle success
                        console.log('Author details updated successfully.');
                    } else {
                        // Handle failure
                        console.log('Failed to update Author details.');
                    }
                })
                .catch(error => {
                    console.error('An error occurred while updating Author details:', error);
                });
        }

        function resetValidation() {
            // Clear all validation messages
            var validationElements = document.getElementsByClassName("text-danger");
            for (var i = 0; i < validationElements.length; i++) {
                validationElements[i].textContent = "";
            }
        }
    </script>



    <div class="modal-dialog container">
        @if (!string.IsNullOrEmpty(ViewBag.SuccessMessage))
        {
            @await Html.PartialAsync("_Alert", new AlertViewModel {
        IsSuccess = true,
        Message = ViewBag.SuccessMessage
        })
        }

        @if (!string.IsNullOrEmpty(ViewBag.FailureMessage))
        {
            @await Html.PartialAsync("_Alert", new AlertViewModel {
        IsSuccess = false,
        Message = ViewBag.FailureMessage
        })
        }
    </div>

</div>