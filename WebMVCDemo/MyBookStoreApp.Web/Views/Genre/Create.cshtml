@using MyBookStoreApp.MyBookStoreApp.Web.ViewModels;
@model MyBookStoreApp.MyBookStoreApp.Web.ViewModels.GenreViewModel
<div class="container-fluid">
    <a href="@Url.Action("Index","Home")">Home</a> &gt;  <a href="@Url.Action("Index","Genre")">View Genres</a>&gt; <a href="@Url.Action("Create","Genre")">Create a genre</a>
</div>

    <h2 class="card-header">Add new genre</h2>
    <div id="MessageBox"></div>
    <div class="p-3">
        <form method="post">
            <div class="container">
                <div class="form-group my-5 row">
                    <label asp-for="Name" class="form-label col-md-2"></label>
                    <div class="col-md-10 row">
                        <input asp-for="Name" class="form-control col" />
                        <span asp-validation-for="Name" class="col  text-danger"></span>
                    </div>
                </div>

                <div class="form-group my-5 row">
                    <label asp-for="Description" class="form-label col-md-2"></label>
                    <div class="col-md-10 row">
                    <input asp-for="Description" class="form-control col" />
                    <span asp-validation-for="Description" class="col text-danger"></span>
                    </div>
                </div>

                <div class="form-group row">
                    <div class="offset-md-2 col-md-4">
                        <button type="button" onclick="createGenre()" class="btn btn-primary">Add</button>
                        <button type="reset" class="btn btn-danger" onclick="resetValidation()">Reset</button>
                    </div>
                </div>
              </div>
        </form>   
</div>
<script>
    function createGenre() {
        var form = document.querySelector('form');
        var formData = new FormData(form);

        fetch(form.action, {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    console.log('Genre created successfully.');
                    displayResult(true, data.message);

                } else {
                    console.log('Failed to add new genre!');
                    displayResult(false, data.message);
                }
            })
            .catch(error => {
                console.error('An error occurred while adding new genre :', error);
                displayResult(false, data.message);
            });
    }

    function displayResult(isSuccess, message) {
        var acknowledgementBox = document.getElementById("MessageBox");
        acknowledgementBox.className = "";
        if (isSuccess) {
            acknowledgementBox.classList.add("text-success", "card", "alert-success", "p-4");
            acknowledgementBox.textContent = message;
        }
        else {
            acknowledgementBox.classList.add("text-danger", "card", "alert-danger", "p-4");
            acknowledgementBox.textContent = message;
        }
    }

    function resetValidation() {
        // Clear all validation messages
        var validationElements = document.getElementsByClassName("text-danger");
        var acknowledgementBox = document.getElementById("MessageBox");

        acknowledgementBox.textContent = "";
        acknowledgementBox.className = "";
        for (var i = 0; i < validationElements.length; i++) {
            validationElements[i].textContent = "";
        }
    }
</script>